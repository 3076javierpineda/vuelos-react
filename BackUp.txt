src/app.js

import React from 'react';
import FormFlight from './components/FormFlight/FormFlight';


function App() {
 
  return (
    <div><FormFlight></FormFlight></div>
    );
  }

export default App;



components/formFlight/formFlight.jxs

import React, { useState, useEffect } from 'react';
import Styles from './FormFlight.css';


function App() {
  const [fromCity, setFromCity] = useState('');
  const [toCity, setToCity] = useState('');
  const [flights, setFlights] = useState([]);
  const [airports, setAirports] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleSubmit = (e) => {
    e.preventDefault();
    setLoading(true);

    Promise.all([fetchAirports(fromCity), fetchAirports(toCity)])
      .then(([fromAirports, toAirports]) => {
        const flightPromises = [];

        fromAirports.forEach(fromAirport => {
          toAirports.forEach(toAirport => {
            const searchObject = {
              searchs: 250,
              qtyPassengers: 1,
              adult: 1,
              itinerary: [
                {
                  departureCity: fromAirport.iata,
                  arrivalCity: toAirport.iata,
                  hour: '2024-02-09T00:00:00+0000',
                },
              ],
            };

            const flightPromise = fetch('https://travelflight.pdtcomunicaciones.com/api/flights', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(searchObject),
            })
              .then(response => response.json())
              .then(data => {
                if (data.data.Seg1.length > 0) {
                  setFlights(prevFlights => [...prevFlights, ...data.data.Seg1]);
                }
              })
              .catch(error => {
                console.error('Error al obtener vuelos:', error);
              });

            flightPromises.push(flightPromise);
          });
        });

        return Promise.all(flightPromises);
      })
      .catch(error => {
        console.error('Error:', error);
      })
      .finally(() => {
        setLoading(false);
      });

  };

  const fetchAirports = (city) => {
    const bodySearch = {
      code: city,
    };

    return fetch('https://travelflight.pdtcomunicaciones.com/api/airports', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      mode: 'cors',
      body: JSON.stringify(bodySearch),
    })
      .then(response => response.json())
      .catch(error => {
        console.error('Error al obtener aeropuertos:', error);
        return [];
      });
  };


  return (
    <div className="App">
        <div>
           <h1 className='titleForm'>RESERVA TU VUELO</h1>
        </div>
        <div className='container'>
            <form className='flight-form' onSubmit={handleSubmit}>
                <div className='line1'>
                    <div className='form-group'>
                        <label>Desde:</label>
                        <input   type="text"   value={fromCity}   onChange={(e) => setFromCity(e.target.value)}  />
                    </div>
                    <div className='form-group'>
                    <label>Hacia:</label>
                        <input   type="text"   value={toCity}   onChange={(e) => setToCity(e.target.value)}  />
                    </div>
                    <div className='form-group'>
                    <label for="passengers">Cantidad de Pasajeros:</label>
                        <input type="text"  />   
                    </div>
                </div>
                <div className='line2'>
                    <div className='form-group'>
                        <label for="departure">Fecha de Ida:</label>
                        <input type="date" id="departure" name="departure" />
                    </div>
                    <div className='form-group'>
                        <label for="return">Fecha de Vuelta:</label>
                        <input type="date" id="return" name="return" />
                    </div>
                </div>
                <button type="submit" disabled={loading}>
                  {loading ? 'Buscando...' : 'Buscar Vuelos'}
                </button>
            </form>
        </div>

        <div className="flight-list">
        {flights.map((flight, index) => (
          flight.segments.map((segment, index) => (
            <div className='contentCardFlight' key={index}>
                <div className='cardSearch'>
                  <p><strong>CIUDAD DE SALIDA: </strong> {segment.location[0].locationId} </p>
                  <p><strong>FECHA DE SALIDA: </strong> {segment.productDateTime.dateOfDeparture}</p>
                  <p><strong>HORA DE SALIDA: </strong> {segment.productDateTime.timeOfDeparture}</p>
                </div>
                <div className='cardLine'>
                  <img
                      src={`https://pics.avs.io/90/90/${segment.companyId.marketingCarrier}.png`}
                      alt={segment.carrier}
                      />
                </div>
                <div className='cardSearch'>
                  <p><strong>AEROLÍNEA: </strong> {segment.companyId.marketingCarrier}</p>
                 
                  <p><strong>NÚMERO DE VUELO: </strong> {segment.flightOrtrainNumber}</p>
                </div>
                <div class="cardLine">
                <img
                      src={`https://pics.avs.io/90/90/${segment.companyId.marketingCarrier}.png`}
                      alt={segment.carrier}
                      />
                </div>
                <div className='cardSearch'>
                  <p><strong>CIUDAD DE LLEGADA: </strong>  {segment.location[1].locationId}</p>
                  <p><strong>FECHA DE LLEGADA: </strong> {segment.productDateTime.dateOfArrival}</p>
                  <p><strong>HORA DE LLEGADA: </strong> {segment.productDateTime.timeOfArrival}</p>
                </div>
            </div>
          ))
        ))}
      </div>
    </div>
  );
}

export default App;   



components/formFlight/formFlight.css



  body {
    background-color:  rgba(13, 13, 14, 0.1);
    padding: 0;
    height: 100%;
} 

.titleForm{
    margin: 30px auto;
    border-bottom: 3px solid #333;
    padding-bottom: 10px;
    width: 84%;
    text-align: center;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.container {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-weight: bold;
    margin: 50px auto;
    text-align: center;
    width: 80%;
    padding: 30px;
    background: linear-gradient(to bottom, #f0f0f0, #e6e6e6);
    display: flex;
    height: 30vh;
    justify-content: center;
    border-radius: 30px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.8);
    text-align: center;
}



.flight-form {
    display: flex;
    flex-direction: column;
    width: 90%;
}

.line1, .line2 {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

.form-group {
    flex: 1;
    margin-bottom: 15px;
}

label {
    font-weight: bold;
    color: #0e0f25;
}

input[type="text"],
input[type="date"],
input[type="number"] {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 10px;
    background: linear-gradient(to bottom, #fff, #f9f9f9);
    width: 90%;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.8);
}

button {
    background: linear-gradient(to bottom, #2658e3, #150baa);
    color: #fff;
    border: none;
    border-radius: 8px;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
    margin-top: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.8);
}

button:hover {
    background: linear-gradient(to bottom, #10286b, #09026b);
}


.contentCardFlight{
    display: flex;
    flex-direction: row;
    background: linear-gradient(to bottom, #f0f0f0, #e6e6e6);
    width: 80%;
    margin: 30px auto;
    justify-content: space-between;
    border: 1px solid #aaaaaa;
    border-radius: 30px;
    padding: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.8);
}

.contentCardFlight p{
    font-size: 15px;
    font-weight: bold;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-weight: 400;
    padding: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
   
}

.cardSearch{
    display: flex;
    flex-direction: column;
    border: 1px solid #333;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
    text-align: center;
    justify-content: center;
}



.cardLine{
    display: flex;
    border-bottom: solid 2px black;
    width: 17%;
    height: 105px;
    align-items: end;
    text-align: center;
    justify-content: center;
}



@media (max-width: 760px){
    .line1, .line2 {
        display: flex;
        flex-direction: column;
    }
    .container {
     height: 70%;
    }

    .contentCardFlight p{
        font-size: 10px;
        font-weight: 100;
    }

    .cardLine{
        display: none;
        border-bottom: none;
        width: none;
        height: none;
        align-items: none;
        text-align: none;
    }
    
}


